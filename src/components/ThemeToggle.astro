<theme-toggle class="ms-2 sm:ms-4">
    <div class="text-center">
        <button
            class="relative  transition-all"
            type="button"
            style=" padding:4px 0 0 0 ;"
        >
            <span class="sr-only">Dark Theme</span>
            <svg
                aria-hidden="true"
                class=" opacity-100 transition-all dark:scale-0 dark:opacity-0"
                fill="none"
                focusable="false"
                id="sun-svg"
                stroke-width="1.5"
                viewBox="0 0 24 24"
                xmlns="http://www.w3.org/2000/svg"
                style="width:30px; height:30px; margin-top: 0;"
            >
                <path
                    d="M12 18C15.3137 18 18 15.3137 18 12C18 8.68629 15.3137 6 12 6C8.68629 6 6 8.68629 6 12C6 15.3137 8.68629 18 12 18Z"
                    stroke="currentColor"
                    stroke-linecap="round"
                    stroke-linejoin="round"></path>
                <path d="M22 12L23 12" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round"></path>
                <path d="M12 2V1" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round"></path>
                <path d="M12 23V22" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round"></path>
                <path d="M20 20L19 19" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round"></path>
                <path d="M20 4L19 5" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round"></path>
                <path d="M4 20L5 19" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round"></path>
                <path d="M4 4L5 5" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round"></path>
                <path d="M1 12L2 12" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round"></path>
            </svg>
            <svg
                aria-hidden="true"
                class="absolute start-1/2 top-1/2 h-7 w-7 -translate-x-1/2 -translate-y-1/2 scale-0 opacity-0 transition-all dark:scale-100 dark:opacity-100"
                style="width:30px; height:28px; margin-top: 3px;"
                fill="none"
                focusable="false"
                id="moon-svg"
                stroke="currentColor"
                stroke-width="1.5"
                viewBox="0 0 24 24"
                xmlns="http://www.w3.org/2000/svg"
            >
                <path d="M0 0h24v24H0z" fill="none" stroke="none"></path>
                <path d="M12 3c.132 0 .263 0 .393 0a7.5 7.5 0 0 0 7.92 12.446a9 9 0 1 1 -8.313 -12.454z"></path>
                <path d="M17 4a2 2 0 0 0 2 2a2 2 0 0 0 -2 2a2 2 0 0 0 -2 -2a2 2 0 0 0 2 -2"></path>
                <path d="M19 11h2m-1 -1v2"></path>
            </svg>
        </button>
        <div class="text-sm" style="margin-top:-5px;">
            <span class="themetext" id="theme-text">Light</span>
        </div>
    </div>
</theme-toggle>

<script>
    import { rootInDarkMode } from "@/utils";

    class ThemeToggle extends HTMLElement {
        #controller: AbortController = new AbortController();

        connectedCallback() {
            const button = this.querySelector("button");
            const themeText = this.querySelector("#theme-text");

            if (!button || !themeText) {
                console.error("Button or theme text element not found");
                return;
            }

            // set aria role value
            button.setAttribute("role", "switch");
            button.setAttribute("aria-checked", String(rootInDarkMode()));

            // Set initial theme text
            themeText.textContent = rootInDarkMode() ? "Dark" : "Light";

            // Abort signal
            const { signal } = this.#controller;

            // button event
            button.addEventListener(
                "click",
                () => {
                    const newTheme = rootInDarkMode() ? "light" : "dark";

                    // Update the theme text immediately
                    themeText.textContent = newTheme === "dark" ? "Dark" : "Light";
                    button.setAttribute("aria-checked", String(newTheme === "dark"));

                    // Dispatch event to change the theme
                    document.dispatchEvent(
                        new CustomEvent("theme-change", {
                            detail: {
                                theme: newTheme,
                            }
                        })
                    );
                },
                { signal }
            );
        }

        disconnectedCallback() {
            this.#controller?.abort();
        }
    }

    customElements.define("theme-toggle", ThemeToggle);
</script>
